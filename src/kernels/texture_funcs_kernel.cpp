#include <string>
namespace luxrays { namespace ocl {
std::string KernelSource_texture_funcs = 
"#line 2 \"material_funcs.cl\"\n"
"\n"
"/***************************************************************************\n"
" *   Copyright (C) 1998-2010 by authors (see AUTHORS.txt )                 *\n"
" *                                                                         *\n"
" *   This file is part of LuxRays.                                         *\n"
" *                                                                         *\n"
" *   LuxRays is free software; you can redistribute it and/or modify       *\n"
" *   it under the terms of the GNU General Public License as published by  *\n"
" *   the Free Software Foundation; either version 3 of the License, or     *\n"
" *   (at your option) any later version.                                   *\n"
" *                                                                         *\n"
" *   LuxRays is distributed in the hope that it will be useful,            *\n"
" *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *\n"
" *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *\n"
" *   GNU General Public License for more details.                          *\n"
" *                                                                         *\n"
" *   You should have received a copy of the GNU General Public License     *\n"
" *   along with this program.  If not, see <http://www.gnu.org/licenses/>. *\n"
" *                                                                         *\n"
" *   LuxRays website: http://www.luxrender.net                             *\n"
" ***************************************************************************/\n"
"\n"
"//------------------------------------------------------------------------------\n"
"// ConstFloat texture\n"
"//------------------------------------------------------------------------------\n"
"\n"
"float3 ConstFloatTexture_GetColorValue(__global Texture *texture, const float2 uv) {\n"
"	return texture->constFloat.value;\n"
"}\n"
"\n"
"//------------------------------------------------------------------------------\n"
"// ConstFloat3 texture\n"
"//------------------------------------------------------------------------------\n"
"\n"
"float3 ConstFloat3Texture_GetColorValue(__global Texture *texture, const float2 uv) {\n"
"	return vload3(0, &texture->constFloat3.color.r);\n"
"}\n"
"\n"
"//------------------------------------------------------------------------------\n"
"// ConstFloat4 texture\n"
"//------------------------------------------------------------------------------\n"
"\n"
"float3 ConstFloat4Texture_GetColorValue(__global Texture *texture, const float2 uv) {\n"
"	return vload3(0, &texture->constFloat4.color.r);\n"
"}\n"
"\n"
"//------------------------------------------------------------------------------\n"
"\n"
"float3 Texture_GetColorValue(__global Texture *texture, const float2 uv) {\n"
"	switch (texture->type) {\n"
"		case CONST_FLOAT:\n"
"			return ConstFloatTexture_GetColorValue(texture, uv);\n"
"		case CONST_FLOAT3:\n"
"			return ConstFloat3Texture_GetColorValue(texture, uv);\n"
"		case CONST_FLOAT4:\n"
"			return ConstFloat4Texture_GetColorValue(texture, uv);\n"
"		default:\n"
"			return 0.f;\n"
"	}\n"
"}\n"
; } }
